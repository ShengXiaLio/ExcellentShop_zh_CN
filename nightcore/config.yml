Plugin:
  # 插件的本地化名称。它用于消息和内部占位符。
  Name: nightcore
  # 插件前缀。用于消息。
  Prefix: <lyellow><b>nightcore</b></lyellow><dgray> » </dgray><gray>
  # 将注册为主要插件命令的命令名称。
  # 不要留空。用逗号分隔多个名称。
  Command_Aliases: nightcore,ncore
  # 设置插件语言。
  # 基本上它告诉插件使用'/lang/'子文件夹中的特定消息配置。
  # 如果指定的语言不可用，将使用默认语言（英语）。
  # [默认是系统区域设置]
  Language: cn
DataFixer:
  # 当启用时，使用Mojang的DataFixer实用程序将ItemStacks从<= 1.20.4 NBT格式更新为1.20.5+ NBT格式。
  # 重要说明：您只需要使用此设置一次！启用它，重启服务器并重新保存所有存储压缩项目数据的配置：商店、箱子等。
  Enabled: true
ModernTextFormation:
  # 当启用时，在插件加载时解析（反序列化）语言消息为Spigot TextComponent(s)。
  # 当禁用时，在将消息发送给玩家时，运行时解析（反序列化）语言文本为Spigot TextComponent(s)。
  # 启用此设置对性能有好处，但带有占位符的消息将在运行时重新编译。
  # （旁注）与NexEngine不同，它不再使用正则表达式，这使得反序列化显著更快且准确。
  # [默认是true]
  Precompile_Language: true
  # 在这里您可以定义自定义颜色，以便在所有nightcore插件中使用，如<aqua>文本</aqua>。
  # 您还可以覆盖默认颜色。
  Default_Colors:
    aqua: '#00ffff'
Menu:
  # 设置GUI中玩家点击的冷却时间（以毫秒为单位）。
  # [默认是150毫秒]
  Click_Cooldown: 150
UserData:
  # 启用用户数据管理的调试消息。
  # [默认是false]
  Debug: false
  Cache:
    # 设置离线用户数据将被缓存多长时间（以秒为单位）
    # 直到被移除并需要从数据库重新加载。
    # [默认是300（5分钟）]
    LifeTime: 300
    # 设置插件是否将缓存玩家名称和UUID。
    # 这将提高数据库性能，当检查用户是否存在时，但将使用更多的内存来存储UUID和名称。
    # [默认是true]
    Names_And_UUIDs: true
Engine:
  # 允许在插件配置中使用旧版颜色代码（例如'&7', '&l', 等）。
  # 此设置仅用于向后兼容！没有保证它将在未来更新中持续存在！
  # 除非您需要为您的自定义语言配置和翻译添加支持，否则您不应该使用它。
  # 您应该尽快迁移到新的文本格式：https://github.com/nulli0n/nightcore-spigot/wiki/Text-Formation
  Legacy_Color_Support: true
  # 设置是否除了常规的'Player#getName'之外，还可以使用'Player#getDisplayName'来查找和获取玩家。
  # 如果您想使用命令中的自定义玩家昵称，这很有用。
  # （仅适用于基于nightcore的插件。）
  # [默认是false]
  Respect_Player_DisplayName: false
  # 控制数值数据的格式化和舍入方式。
  # 允许的模式：UP, DOWN, CEILING, FLOOR, HALF_UP, HALF_DOWN, HALF_EVEN, UNNECESSARY
  # 教程可以在这里找到：https://docs.oracle.com/javase/tutorial/i18n/format/decimalFormat.html
  Number_Format:
    Format: '#,###.##'
    Rounding: half_even